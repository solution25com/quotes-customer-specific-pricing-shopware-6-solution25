const E=`<sw-page :headerBorderColor="'#00A1FF'" class="customer-specific-price-list"> <template #smart-bar-header> <sw-page-title class="customPricesTitle">Add Custom Price</sw-page-title> <div class="customPricesBtnWrapper"> <sw-data-csv @import-start="isImporting = true" @import-finish="handleImportFinish"></sw-data-csv> <sw-button variant="primary" @click="openAddCustomPriceModal" class="sw-page__header-add-credit-button" > Add Custom Price </sw-button> </div> </template> <template #content> <div v-if="isImporting" class="csv-loader-container"> <sw-loader></sw-loader> <p class="importing-description">Importing CSV...</p> </div> <sw-data-grid :dataSource="prices" :columns="columns" :isLoading="isLoading"> <template #column-customerName="{ item }"> <sw-skeleton-bar v-if="isLoading" /> <a v-else :href="\`/admin#/sw/customer/detail/\${item.customerId}/base\`" class="link"> {{ item.customerName }} </a> </template> <template #column-customerNumber="{ item }"> <sw-skeleton-bar v-if="isLoading" /> <span v-else>{{ item.customerNumber }}</span> </template> <template #column-product="{ item }"> <sw-skeleton-bar v-if="isLoading" /> <span v-else>{{ item.product }}</span> </template> <template #column-netPrice="{ item }"> <sw-skeleton-bar v-if="isLoading" /> <span v-else>{{ item.netPrice }}</span> </template> <template #column-grossPrice="{ item }"> <sw-skeleton-bar v-if="isLoading" /> <span v-else>{{ item.grossPrice }}</span> </template> <template #actions="{ item }"> <sw-context-menu-item @click="openEditCustomPriceModal(item)" > Edit </sw-context-menu-item> <sw-context-menu-item @click="openDeleteModal(item.id)" variant="danger" > Delete </sw-context-menu-item> </template> </sw-data-grid> <div> <sw-pagination :total="total" :limit="limit" @limitChange="onPageChange" :page="page" @pageChange="onPageChange"></sw-pagination> </div> </template> </sw-page> <sw-modal v-if="showDeleteModal" @modal-close="closeDeleteModal"> <template #modal-header> <h2>Confirm Deletion</h2> </template> <p>Are you sure you want to delete this custom price?</p> <template #modal-footer> <sw-button variant="primary" @click="confirmDelete">Yes, Delete</sw-button> <sw-button variant="secondary" @click="closeDeleteModal">Cancel</sw-button> </template> </sw-modal> <sw-modal v-if="showAddCustomPriceModal" title="Add Custom Price" @modal-close="showAddCustomPriceModal = false" size="large" class="custom-medium-modal" > <sw-tabs> <sw-tabs-item :active="selectedTab === 'customer'" @click="selectedTab = 'customer'" > Customer </sw-tabs-item> <sw-tabs-item :active="selectedTab === 'product'" @click="selectedTab = 'product'" > Product </sw-tabs-item> <sw-tabs-item :active="selectedTab === 'price'" @click="selectedTab = 'price'" > Price </sw-tabs-item> </sw-tabs> <div class="tab-content"> <div v-if="selectedTab === 'customer'"> <sw-customer-select v-model:value="selectedCustomer"/> </div> <div v-if="selectedTab === 'product'"> <sw-product-select v-model:value="selectedProduct"/> </div> <div v-if="selectedTab === 'price'"> <sw-card title="Amount"> <sw-number-field v-model:value="newCustomerAmount" :min="0.00" :step="1.00" :number-type="'float'" placeholder="Enter amount" /> </sw-card> </div> </div> <template #modal-footer> <sw-button @click="addOrUpdateCustomPrice" size="small" variant="primary"> Submit </sw-button> <sw-button @click="showAddCustomPriceModal = false" size="small" variant="danger"> Cancel </sw-button> </template> </sw-modal> <sw-modal v-if="showEditCustomPriceModal" title="Edit Custom Price" @modal-close="showEditCustomPriceModal = false" size="medium" > <sw-card> <sw-number-field v-model:value="newCustomerAmount" label="Amount" :min="0.00" :step="1.00" :number-type="'float'" placeholder="Enter new price" /> </sw-card> <template #modal-footer> <sw-button @click="addOrUpdateCustomPrice" size="small" variant="primary"> Save Changes </sw-button> <sw-button @click="showEditCustomPriceModal = false" size="small" variant="danger"> Cancel </sw-button> </template> </sw-modal>`,T=`<div> <sw-card title="Select Customer"> <sw-simple-search-field v-model:value="searchTerm" placeholder="Search for customers..." @search="onSearch" /> <sw-data-grid :dataSource="customerOptions" :columns="columns" :isLoading="isLoading" :identifier="'id'" :showSelection="true" :selectedItems="selectedItems" @selectItem="onSelectCustomer" > <template #column-name="{ item }"> {{ item.label }} </template> <template #column-customerNumber="{ item }"> {{ item.customerNumber }} </template> <template #column-email="{ item }"> {{ item.email }} </template> </sw-data-grid> <sw-pagination :total="totalCustomers" :limit="limit" :page="page" @pageChange="onPageChange"> </sw-pagination> </sw-card> </div>`,{Component:R}=Shopware;R.register("sw-customer-select",{template:T,inject:["repositoryFactory"],props:{value:{type:String,required:!1,default:null}},data(){return{selectedCustomer:this.value,customerOptions:[],isLoading:!1,searchTerm:"",totalCustomers:0,page:1,limit:10,columns:[{property:"label",label:"Name",allowResize:!0},{property:"customerNumber",label:"Customer Number",allowResize:!0},{property:"email",label:"Email",allowResize:!0}]}},watch:{value(e){this.selectedCustomer=e},selectedCustomer(e){this.$emit("update:value",e)},searchTerm:{handler(){this.fetchCustomers(!0)},immediate:!1}},created(){this.fetchCustomers()},computed:{selectedItems(){if(!this.selectedCustomer)return{};const e=this.customerOptions.find(t=>t.id===this.selectedCustomer);return e?{[e.id]:e}:{}}},methods:{async fetchCustomers(e=!1){var t;e&&(this.page=1),this.isLoading=!0;try{const r=this.createCriteria(),s=await this.repositoryFactory.create("customer").search(r,Shopware.Context.api);this.customerOptions=s.map(i=>({id:i.id,label:`${i.firstName} ${i.lastName}`,customerNumber:i.customerNumber,email:i.email})),this.totalCustomers=s.total}catch(r){console.error("Error fetching customers:",((t=r.response)==null?void 0:t.data)||r)}finally{this.isLoading=!1}},onSearch(){this.fetchCustomers(!0)},onPageChange(e){if(typeof e=="object"&&e.page&&(e=e.page),typeof e!="number"||e<=0){console.error("Invalid page number:",e);return}this.page=parseInt(e,10),this.fetchCustomers()},onSelectCustomer(e){const t=Object.values(e)[0];t&&(this.selectedCustomer=t.id,this.$emit("update:value",t.id))},createCriteria(){const e=Number.isInteger(this.page)&&this.page>0?this.page:1,t=new Shopware.Data.Criteria(e,this.limit);return t.setLimit(this.limit),t.setPage(this.page),this.searchTerm&&this.searchTerm.trim().length>0&&t.addFilter(Shopware.Data.Criteria.multi("OR",[Shopware.Data.Criteria.contains("firstName",this.searchTerm),Shopware.Data.Criteria.contains("lastName",this.searchTerm),Shopware.Data.Criteria.contains("email",this.searchTerm),Shopware.Data.Criteria.contains("customerNumber",this.searchTerm)])),t}}});const M=`<sw-card title="Select Product"> <sw-simple-search-field v-model:value="searchTerm" placeholder="Search for products..." @search="onSearch" /> <sw-data-grid :dataSource="productOptions" :columns="columns" :isLoading="isLoading" :identifier="'id'" :showSelection="true" @selectItem="onSelectProduct" > <template #column-name="{ item }"> {{ item.label }} </template> <template #column-productNumber="{ item }"> {{ item.productNumber }} </template> </sw-data-grid> <sw-pagination :total="totalProducts" :page="page" :limit="limit" @pageChange="onPageChange" /> </sw-card>`,{Component:k}=Shopware;k.register("sw-product-select",{template:M,inject:["repositoryFactory"],props:{value:{type:String,required:!1,default:null}},data(){return{productOptions:[],selectedProduct:this.value,isLoading:!1,searchTerm:"",totalProducts:0,page:1,limit:10,columns:[{property:"label",label:"Product Name",allowResize:!0},{property:"productNumber",label:"Product Number",allowResize:!0}]}},watch:{value(e){this.selectedCustomer=e},selectedProduct(e){this.$emit("update:value",e)},searchTerm(){this.fetchProducts(!0)}},created(){this.fetchProducts()},methods:{async fetchProducts(e=!1){e&&(this.page=1),this.isLoading=!0;try{const t=this.createCriteria(),r=await this.repositoryFactory.create("product").search(t,Shopware.Context.api);this.productOptions=r.map(s=>({id:s.id,label:s.name||"Variant Product",productNumber:s.productNumber})),this.totalProducts=r.total}catch{}finally{this.isLoading=!1}},createCriteria(){const e=new Shopware.Data.Criteria(this.page,this.limit);return e.setLimit(this.limit),e.setPage(this.page),this.searchTerm&&e.addFilter(Shopware.Data.Criteria.multi("OR",[Shopware.Data.Criteria.contains("name",this.searchTerm),Shopware.Data.Criteria.contains("productNumber",this.searchTerm)])),e},onPageChange(e){typeof e=="object"&&e.page&&(e=e.page),!(typeof e!="number"||e<=0)&&(this.page=parseInt(e,10),this.fetchProducts())},onSearch(){this.fetchProducts(!0)},onSelectProduct(e){const t=Object.values(e)[0];t&&(this.selectedProduct=t.id)}}});const D='<template> <div class="custom-price-csv-import"> <input type="file" ref="csvFileInput" @change="handleFileUpload" accept=".csv" style="display: none" /> <sw-button @click="triggerFileUpload"> Import CSV </sw-button> <sw-button @click="exportCSV" :disabled="isExporting"> Export CSV </sw-button> </div> </template>',{Component:L,Mixin:U}=Shopware;L.register("sw-data-csv",{template:D,inject:["repositoryFactory"],mixins:[U.getByName("notification")],emits:["import-complete","import-start","import-finish"],data(){return{isProcessing:!1,isExporting:!1}},methods:{triggerFileUpload(){this.$refs.csvFileInput.click()},async handleFileUpload(e){const t=e.target.files[0];if(!t)return;this.$emit("import-start"),await this.$nextTick(),await new Promise(s=>setTimeout(s,100));const r=new FileReader;r.onload=async s=>{const i=s.target.result,o=this.parseCSV(i);await this.processCSVData(o),this.$emit("import-finish")},r.readAsText(t)},parseCSV(e){const t=e.split(`
`).filter(s=>s.trim()),r=t[0].split(",").map(s=>s.trim());return t.slice(1).map(s=>{const i=this.parseCSVLine(s);return r.reduce((o,a,m)=>(o[a]=i[m]?i[m].trim():"",o),{})}).filter(s=>s["Customer ID"]&&s.SKU&&s["Custom WS Price"])},parseCSVLine(e){const t=[];let r="",s=!1;for(let i=0;i<e.length;i++){const o=e[i];o==='"'?s=!s:o===","&&!s?(t.push(r),r=""):r+=o}return t.push(r),t},async processCSVData(e){try{this.isProcessing=!0;const t=e.length;let r=0,s=0,i=0;const o=10;for(let a=0;a<e.length;a+=o){const m=e.slice(a,a+o);await Promise.all(m.map(async l=>{try{const u=await this.getCustomerUUID(l["Customer ID"]),n=await this.getProductUUID(l.SKU),p=parseFloat(l["Custom WS Price"]);u&&n&&!isNaN(p)?(await this.saveCustomPrice(u,n,p),s++):(i++,console.warn(`Skipped row - Customer: ${l["Customer ID"]}, Product: ${l.SKU}, Price: ${l["Custom WS Price"]}`))}catch(u){console.error(`Error processing row: ${JSON.stringify(l)}`,u),i++}r++})),(r%50===0||r===t)&&this.createNotificationInfo({title:"Import Progress",message:`Processed ${r} of ${t} rows...`})}this.createNotificationSuccess({title:"Import Complete",message:`Successfully imported ${s} records. ${i>0?`Failed: ${i}`:""}`})}catch(t){console.error("Import Error:",t),this.createNotificationError({title:"Import Error",message:"There was an issue importing the CSV file. Please try again."})}finally{this.isProcessing=!1}},async getCustomerUUID(e){const t=this.repositoryFactory.create("customer"),r=new Shopware.Data.Criteria(1,1);r.addFilter(Shopware.Data.Criteria.equals("id",e));const s=await t.search(r,Shopware.Context.api);return s.total>0?s.first().id:null},async getProductUUID(e){const t=this.repositoryFactory.create("product"),r=new Shopware.Data.Criteria(1,1);r.addFilter(Shopware.Data.Criteria.equals("productNumber",e));const s=await t.search(r,Shopware.Context.api);return s.total>0?s.first().id:null},async saveCustomPrice(e,t,r){const s=this.repositoryFactory.create("custom_price"),i=this.repositoryFactory.create("tax"),a=await this.repositoryFactory.create("product").get(t,Shopware.Context.api),l=(await i.get(a.taxId,Shopware.Context.api)).taxRate||0,u=r*(1+l/100),n=new Shopware.Data.Criteria(1,1);n.addFilter(Shopware.Data.Criteria.equals("customerId",e)),n.addFilter(Shopware.Data.Criteria.equals("productId",t));const p=await s.search(n,Shopware.Context.api);let d;p.total>0?d=p.first():(d=s.create(Shopware.Context.api),d.customerId=e,d.productId=t),d.price=[{quantityStart:1,quantityEnd:null,price:[{currencyId:Shopware.Context.app.systemCurrencyId,net:parseFloat(r.toFixed(2)),gross:parseFloat(u.toFixed(2)),linked:!0}]}],await s.save(d,Shopware.Context.api)},async exportCSV(){this.isExporting=!0;try{const e=this.repositoryFactory.create("custom_price"),t=[];let r=1;const s=500,i=new Shopware.Data.Criteria(1,1),a=(await e.search(i,Shopware.Context.api)).total;if(a===0){this.createNotificationWarning({title:"No Data",message:"No custom prices found to export."}),this.isExporting=!1;return}this.createNotificationInfo({title:"Export Started",message:`Exporting ${a} records...`});const m=Math.ceil(a/s);for(let c=1;c<=m;c++){const h=new Shopware.Data.Criteria;h.addAssociation("customer"),h.addAssociation("product"),h.setLimit(s),h.setPage(c);const y=await e.search(h,Shopware.Context.api);t.push(...y),(c%5===0||c===m)&&this.createNotificationInfo({title:"Export Progress",message:`Fetched ${t.length} of ${a} records...`})}const l=`Customer ID,Customer Tier Name,Customer Number,SKU,Product Name,Custom MSRP,Custom WS Price
`,u=t.map(c=>{var P,S,v;const h=c.customerId||"N/A",y=c.customer?`${c.customer.firstName} ${c.customer.lastName}`:"Unknown Customer",N=((P=c.customer)==null?void 0:P.customerNumber)||"N/A",x=((S=c.product)==null?void 0:S.productNumber)||"N/A",I="",F=(v=c.product)!=null&&v.name?`"${c.product.name.replace(/"/g,'""')}"`:"Unknown Product";let b="N/A";if(Array.isArray(c.price)&&c.price.length>0&&Array.isArray(c.price[0])&&c.price[0].length>0){const $=c.price[0][0].net??0;b=new Intl.NumberFormat("en-US",{style:"currency",currency:"USD"}).format($)}const A=y.replace(/"/g,'""');return`${h},"${A}",${N},${x},${F},${I},${b}`}),n=l+u.join(`
`),p=new Blob([n],{type:"text/csv;charset=utf-8;"}),d=new Date,C=`M2 VB Display All Mageworx Custom Pricing - ${`${d.getMonth()+1}.${d.getDate()}.${d.getFullYear().toString().slice(2)}`}.csv`,w=window.URL.createObjectURL(p),f=document.createElement("a");f.href=w,f.setAttribute("download",C),document.body.appendChild(f),f.click(),document.body.removeChild(f),window.URL.revokeObjectURL(w),this.createNotificationSuccess({title:"Export Complete",message:`Successfully exported ${t.length} records.`})}catch(e){console.error("Export error:",e),this.createNotificationError({title:"Export Error",message:"Failed to export CSV. Please check the console for details."})}finally{this.isExporting=!1}}}});const{Component:q,Mixin:O}=Shopware;q.register("customer-specific-price-list",{template:E,inject:["repositoryFactory"],mixins:[O.getByName("notification")],data(){return{isLoading:!1,isImporting:!1,prices:[],total:0,page:1,limit:10,showDeleteModal:!1,deleteRecordId:null,showAddCustomPriceModal:!1,showEditCustomPriceModal:!1,selectedTab:"customer",selectedCustomer:null,selectedProduct:null,newCustomerAmount:null,columns:[{property:"id",label:"#ID",visible:!1},{property:"customerName",label:"Customer Name",sortable:!0},{property:"customerNumber",label:"Customer Number",sortable:!0},{property:"product",label:"Product",sortable:!0},{property:"netPrice",label:"Net Price",sortable:!0},{property:"grossPrice",label:"Gross Price",sortable:!0},{property:"created_at",label:"Created At",sortable:!0}]}},created(){this.fetchCustomPrices()},watch:{selectedCustomer(e){this.fetchExistingPrice()},selectedProduct(e){this.fetchExistingPrice()}},methods:{handleImportFinish(){this.isImporting=!1,this.fetchCustomPrices()},resetForm(){this.selectedCustomer=null,this.selectedProduct=null,this.newCustomerAmount=null,this.showAddCustomPriceModal=!1},onPageChange(e){if(typeof e=="object")e.page&&(this.page=parseInt(e.page,10)),e.limit&&(this.limit=parseInt(e.limit,10));else if(typeof e=="number"&&e>0)this.page=parseInt(e,10);else return;this.fetchCustomPrices()},openAddCustomPriceModal(){this.showAddCustomPriceModal=!0},async confirmDelete(){try{await this.repositoryFactory.create("custom_price").delete(this.deleteRecordId,Shopware.Context.api),this.createNotificationSuccess({title:"Success",message:"The custom price has been deleted successfully."}),this.fetchCustomPrices()}catch{this.createNotificationError({title:"Error",message:"Failed to delete the custom price. Please try again."})}this.closeDeleteModal()},openDeleteModal(e){this.deleteRecordId=e,this.showDeleteModal=!0},closeDeleteModal(){this.showDeleteModal=!1,this.deleteRecordId=null},openEditCustomPriceModal(e){this.selectedCustomer=e.customerId,this.selectedProduct=e.productId,e.netPrice?this.newCustomerAmount=parseFloat(e.netPrice):this.newCustomerAmount=null,this.showEditCustomPriceModal=!0},async fetchCustomPrices(){this.isLoading=!0;try{const e=this.repositoryFactory.create("custom_price"),t=this.createCriteria(),r=await e.search(t,Shopware.Context.api);this.prices=r.map(s=>{var i,o,a,m,l,u,n,p,d,g,C,w;return{id:s.id,customerId:s.customerId,customerName:s.customer?`${s.customer.firstName} ${s.customer.lastName}`:"N/A",customerNumber:((i=s.customer)==null?void 0:i.customerNumber)||"N/A",productId:s.productId,product:((a=(o=s.product)==null?void 0:o.translated)==null?void 0:a.name)||((m=s.product)==null?void 0:m.name)||"N/A",netPrice:((p=(n=(u=(l=s.price)==null?void 0:l[0])==null?void 0:u[0])==null?void 0:n.net)==null?void 0:p.toFixed(2))||"N/A",grossPrice:((w=(C=(g=(d=s.price)==null?void 0:d[0])==null?void 0:g[0])==null?void 0:C.gross)==null?void 0:w.toFixed(2))||"N/A",created_at:s.createdAt?new Date(s.createdAt).toLocaleDateString():"N/A"}}),this.total=r.total||0}catch(e){console.error("Failed to fetch custom prices:",e),this.createNotificationError({title:"Error",message:"Failed to fetch custom prices. Please try again."})}finally{this.isLoading=!1}},createCriteria(){return new Shopware.Data.Criteria(this.page,this.limit).addAssociation("customer").addAssociation("product").addSorting(Shopware.Data.Criteria.sort("createdAt","DESC"))},async fetchExistingPrice(){var e,t,r,s;if(!this.selectedCustomer||!this.selectedProduct){this.newCustomerAmount=null;return}try{const i=this.repositoryFactory.create("custom_price"),o=new Shopware.Data.Criteria(1,1).addFilter(Shopware.Data.Criteria.equals("customerId",this.selectedCustomer)).addFilter(Shopware.Data.Criteria.equals("productId",this.selectedProduct)),a=await i.search(o,Shopware.Context.api);this.newCustomerAmount=a.total>0?parseFloat(((s=(r=(t=(e=a.first())==null?void 0:e.price)==null?void 0:t[0])==null?void 0:r[0])==null?void 0:s.net)||null):null}catch{this.newCustomerAmount=null}},async addOrUpdateCustomPrice(e=!1){var t;if(!this.selectedCustomer||!this.selectedProduct||!this.newCustomerAmount){this.createNotificationError({title:"Error",message:"Please enter all required fields."});return}this.isLoading=!0;try{const r=this.repositoryFactory.create("custom_price"),s=await this.repositoryFactory.create("product").get(this.selectedProduct,Shopware.Context.api),i=s.taxId&&((t=await this.repositoryFactory.create("tax").get(s.taxId,Shopware.Context.api))==null?void 0:t.taxRate)||0,o=parseFloat(this.newCustomerAmount),a=o*(1+i/100),m=Shopware.Context.app.systemCurrencyId,l=new Shopware.Data.Criteria(1,1).addFilter(Shopware.Data.Criteria.equals("customerId",this.selectedCustomer)).addFilter(Shopware.Data.Criteria.equals("productId",this.selectedProduct)),u=await r.search(l,Shopware.Context.api);let n=u.total>0?u.first():r.create(Shopware.Context.api);n.customerId=this.selectedCustomer,n.productId=this.selectedProduct,n.price=[{quantityStart:1,quantityEnd:null,price:[{currencyId:m,net:o.toFixed(2),gross:a.toFixed(2),linked:!0}]}],await r.save(n,Shopware.Context.api),this.createNotificationSuccess({title:"Success",message:e?"Custom price updated successfully.":"Custom price added successfully."}),this.fetchCustomPrices(),this.showAddCustomPriceModal=!1,this.showEditCustomPriceModal=!1,this.resetForm()}catch{this.createNotificationError({title:"Error",message:"Failed to save the custom price."})}finally{this.isLoading=!1}}}});Shopware.Module.register("customer-specific-price",{type:"plugin",name:"customer-specific-price",title:"Customer Specific Price",description:"Manage customer specific prices",color:"#ff3d3d",icon:"default-shopping-paper-bag",routes:{list:{component:"customer-specific-price-list",path:"list"}},navigation:[{id:"customer-specific-price",label:"Customer Specific Price",color:"#ff3d3d",path:"customer.specific.price.list",icon:"default-shopping-paper-bag",parent:"sw-customer",position:50}]});const V=`{% block sw_quote_line_items_grid_actions %} <template #column-persistPrice="{ item, isInlineEdit }"> <sw-checkbox-field @update:value="(checked) => setPersistPrice(item, checked)" :value="getPersistPrice(item)" label="Persist Price" :disabled="!acl.can('quote.editor') || !isInlineEdit || loading" /> </template> {{ parent() }} {% endblock %}`;Shopware.Application.addServiceProviderDecorator("ruleConditionDataProviderService",e=>(e.addCondition("lineItemHasCustomPrice",{component:"sw-condition-generic",label:"Item specific price",scopes:["lineItem"],group:"item"}),e));const{Component:_}=Shopware;_.override("sw-quote-send-quote-modal",{created(){const e=this.$tc;this.$tc=function(t,...r){return t==="sw-quote.detail.labelVAT"?"Tax":e.call(this,t,...r)}}});Shopware.Component.override("sw-quote-line-items",{template:V,created(){const e=this.$tc;this.$tc=function(t,...r){return t==="sw-quote.detail.labelVAT"?"Tax":e.call(this,t,...r)}},computed:{columns(){const e=this.$super("columns");e.unshift({property:"persistPrice",label:"Quote Price",inlineEdit:!0,sortable:!1,align:"right",allowResize:!0});const t=e.find(r=>r.property==="price.taxRules[0]");return t&&(t.label=this.$tc("Tax")),e}},methods:{getPersistPrice(e){var t;return((t=e==null?void 0:e.customFields)==null?void 0:t.persistPrice)??!1},setPersistPrice(e,t){e.customFields||(e.customFields={}),e.customFields.persistPrice=t}}});
//# sourceMappingURL=s25-quotes-BEfD4kl6.js.map
